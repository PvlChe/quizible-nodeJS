{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/question/question.component.ts","webpack:///src/app/question/question.component.html","webpack:///src/app/quiz/quiz.component.ts","webpack:///src/app/quiz/quiz.component.html","webpack:///src/app/result/result.component.ts","webpack:///src/app/result/result.component.html","webpack:///src/app/service/quiz.service.ts","webpack:///src/app/start/start.component.ts","webpack:///src/app/start/start.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","QuestionComponent","quizService","timer","randomArray","answer","question","sort","Math","random","setTimer","clearInterval","timerId","postAnswer","emit","setInterval","clearTimeout","QuizComponent","http","router","questions","currentIndex","getQuestions","currentQuestion","length","clearData","navigate","getNextQuestion","ResultComponent","loaded","getResults","res","console","log","answers","err","QuizService","playerData","post","playerAge","age","playerPlz","plz","quizcode","complexities","categories","toPromise","setQuizData","questionId","quizId","right","filter","q","answer1","get","quizData","providedIn","StartComponent","startQuiz","start","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {StartComponent} from './start/start.component';\nimport {QuizComponent} from './quiz/quiz.component';\nimport {ResultComponent} from './result/result.component';\n\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'quiz', component: QuizComponent },\n  { path: 'result', component: ResultComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client-app';\n}\n","<div class=\"wrapper\">\n  <mat-toolbar color=\"accent\">\n    <span>Quizible</span>\n  </mat-toolbar>\n\n<router-outlet></router-outlet>\n\n  <mat-toolbar color=\"accent\">\n\n  </mat-toolbar>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './start/start.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HttpClientModule} from '@angular/common/http';\nimport {QuizService} from './service/quiz.service';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { QuestionComponent } from './question/question.component';\nimport { ResultComponent } from './result/result.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    QuizComponent,\n    QuestionComponent,\n    ResultComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatProgressBarModule,\n    MatButtonModule,\n    HttpClientModule,\n  ],\n  exports: [MatToolbarModule],\n  providers: [QuizService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, DoCheck, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output} from '@angular/core';\nimport {QuizService} from '../service/quiz.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit, OnChanges, OnDestroy {\n\n  public timer = 0;\n  private timerId;\n  @Input() question;\n  public randomArray = [3, 2, 1, 4];\n  @Output() answer: EventEmitter<any> = new EventEmitter();\n\n  constructor(private quizService: QuizService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    if (this.question) {\n      this.randomArray = [1, 2, 3, 4].sort(() => Math.random() - 0.5);\n      this.timer = 0;\n      this.setTimer();    }\n  }\n\n  postAnswer(answer) {\n    this.timer = 0;\n    clearInterval(this.timerId);\n    this.quizService.postAnswer(this.question.id, answer);\n    this.answer.emit(null);\n  }\n\n  setTimer() {\n    this.timerId = setInterval(() => {\n      this.timer += 5;\n      if (this.timer >= 100) {\n        this.postAnswer('timeout');\n      }\n    }, 1000);\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.timerId);\n  }\n\n}\n","<mat-card>\n  <mat-progress-bar mode=\"determinate\" [value]=\"timer\"></mat-progress-bar>\n  <h3>{{question.question}}</h3>\n  <ul>\n    <li (click)=\"postAnswer(question['answer'+randomArray[0]])\">{{question['answer'+randomArray[0]]}}</li>\n    <li (click)=\"postAnswer(question['answer'+randomArray[1]])\">{{question['answer'+randomArray[1]]}}</li>\n    <li (click)=\"postAnswer(question['answer'+randomArray[2]])\">{{question['answer'+randomArray[2]]}}</li>\n    <li (click)=\"postAnswer(question['answer'+randomArray[3]])\">{{question['answer'+randomArray[3]]}}</li>\n  </ul>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {QuizService} from '../service/quiz.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss']\n})\nexport class QuizComponent implements OnInit {\n\n  public questions = [];\n  public currentQuestion;\n  public currentIndex = 0;\n\n  constructor(\n    private http: HttpClient,\n    public router: Router,\n    private quizService: QuizService\n  ) { }\n\n  ngOnInit() {\n    this.questions = this.quizService.getQuestions();\n    this.currentQuestion = this.questions[this.currentIndex];\n  }\n\n  getNextQuestion() {\n    if (++this.currentIndex < this.questions.length) {\n      this.currentQuestion = this.questions[this.currentIndex];\n    } else {\n      this.quizService.clearData();\n      this.router.navigate(['result']);\n    }\n  }\n\n}\n","<div class=\"question-container\" >\n  <app-question (answer)=\"getNextQuestion()\" [question]=\"currentQuestion\"></app-question>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {QuizService} from '../service/quiz.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss']\n})\nexport class ResultComponent implements OnInit {\n  public answers;\n  public loaded = false;\n\n  constructor(private quizService: QuizService) { }\n\n  ngOnInit(): void {\n    this.quizService.getResults().then( res => {\n      console.log(res);\n      this.answers = res;\n      this.loaded = true;\n    }).catch( err => console.log(err));\n  }\n\n}\n","<div *ngIf=\"loaded\" class=\"results\">\n  <div *ngFor=\"let answer of answers\" class=\"result-container\">\n    <h3>{{answer.question.question}}</h3>\n    <span>Your answer: {{answer.answer}}</span>\n    <span>Right answer: {{answer.question.answer1}}</span>\n\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n  private quizId;\n  private questions;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  startQuiz(playerData) {\n    return this.http.post('http://35.159.16.176:3000/quizzes/', {\n      playerAge: playerData.age,\n      playerPlz: playerData.plz,\n      code: playerData.quizcode,\n      complexities: [1, 2, 4],\n      categories: [1, 3, 5]\n    }).toPromise().then(\n      res => {\n        console.log('result from backend', res);\n        this.setQuizData(res);\n        this.router.navigate(['quiz']);\n      }\n    ).catch( err => {\n      console.log(err);\n    });\n  }\n\n  postAnswer(questionId, answer) {\n    this.http.post('http://35.159.16.176:3000/answers/', {\n      quizId: this.quizId,\n      questionId,\n      answer,\n      right: this.questions.filter( q => q.id === questionId)[0].answer1 === answer,\n    }).toPromise().then(\n      res => {\n        console.log('post answer', res);\n      }\n    ).catch( err => {\n      console.log(err);\n    });\n  }\n\n  getResults() {\n    return this.http.get('http://35.159.16.176:3000/answers/' + this.quizId).toPromise();\n  }\n\n  setQuizData(quizData) {\n    this.quizId = quizData.quizId;\n    this.questions = quizData.questions;\n\n  }\n\n  getQuestions() {\n    return this.questions;\n  }\n\n  clearData() {\n    this.questions = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {QuizService} from '../service/quiz.service';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private quizService: QuizService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  start(age, plz , quizcode) {\n    this.quizService.startQuiz({age, plz, quizcode});\n  }\n\n}\n","\n  <div class=\"container\">\n    <mat-card class=\"start-form\">\n      <mat-form-field color=\"primary\">\n        <mat-label>Age</mat-label>\n        <input [autocomplete]=\"false\" matInput #age>\n      </mat-form-field>\n      <mat-form-field color=\"primary\">\n        <mat-label>PLZ</mat-label>\n        <input matInput #plz>\n      </mat-form-field>\n      <mat-form-field color=\"primary\">\n        <mat-label>Quizcode</mat-label>\n        <input matInput #quizcode>\n      </mat-form-field>\n      <button (click)=\"start(age.value, plz.value, quizcode.value)\" mat-raised-button color=\"primary\">Start</button>\n    </mat-card>\n  </div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}